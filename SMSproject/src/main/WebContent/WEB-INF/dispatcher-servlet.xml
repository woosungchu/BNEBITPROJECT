<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	xmlns:mvc="http://www.springframework.org/schema/mvc">

	<!-- 서블릿 컨테이너 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler />
	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
         <bean
            class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
         </bean>
      </mvc:message-converters>
	</mvc:annotation-driven>
 	
 	<mvc:resources mapping="/assets/**" location="/assets/" />
 	
 	<context:annotation-config/>
	<context:component-scan base-package="com.bnebit.sms">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
	</context:component-scan>
	
	
	<!-- AOP -->
	<aop:aspectj-autoproxy proxy-target-class="false" expose-proxy="true"/>

	<!-- 타일즈 뷰 리졸버  -->
    <beans:bean id="tilesConfigurer"
        class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/tiles.xml</beans:value>
                <beans:value>/WEB-INF/views/**/views.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    <beans:bean id="tilesViewResolver"
        class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass">
            <beans:value>
                org.springframework.web.servlet.view.tiles3.TilesView
            </beans:value>
        </beans:property>
        <beans:property name="order" value="1"/>
    </beans:bean>
    
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	  <property name="prefix" value="/WEB-INF/views/"/>
	  <property name="suffix" value=".jsp"/>
	  <property name="order" value="2"/>
 	</bean>
 
    <!-- Abstract View -->
    <bean id="downloadView" class="com.bnebit.sms.util.DownloadView"/>
    <bean id="jsonView" class="com.bnebit.sms.util.JsonView"/>
    <!-- BeanNameResolver -->
	 <bean id="beanNameViewResolver"
	  class="org.springframework.web.servlet.view.BeanNameViewResolver">
	  	<property name="order" value="0"/>
	 </bean>
    
    <!-- MultiPart Resolver -->
 	<bean id="multipartResolver"
 	  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 	  <!-- 최대 업로드 사이즈 (넘어가면 Exception) 단위 byte -->
 	  <property name="maxUploadSize" 
 	     value="100000000"/>
 	   <!-- 최대 메모리 사이즈 단위 byte -->
 	   <property name="maxInMemorySize"
 	      value="100000000"/>
 	</bean>     
    
    <!-- logger -->
<!--     <bean id="logFactory" class="com.bnebit.sms.util.LogFactory" /> -->
<!--  	<bean id="log" factory-bean="logFactory" factory-method="getLog" /> -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="loggerInterceptor" 
            class="com.bnebit.sms.util.LoggerInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <!-- ModelAndView -->
	<bean id="mav" 
     class="org.springframework.web.servlet.ModelAndView"
     scope="request">
     	<aop:scoped-proxy/>
     </bean>
    
     	<!-- Production implementation of the JavaMailSender interface, supporting
		both JavaMail MimeMessages and Spring SimpleMailMessages -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="defaultEncoding" value="utf-8"/>
		<property name="username" value="woosungchutest@gmail.com" />
		<property name="password" value="test0529" />

		<!-- The name of the property, following JavaBean naming conventions -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
<!-- 				<prop key="mail.from.email">woosungchutest@gmail.com</prop> -->
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
     

</beans>